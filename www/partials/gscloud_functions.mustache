<script>
// polyfills
Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(f,g){if(null==this)throw new TypeError('"this" is null or not defined');var e=Object(this),b=e.length>>>0;if(0===b)return!1;var a=g|0;for(a=Math.max(0<=a?a:b-Math.abs(a),0);a<b;){var c=e[a],d=f;if(c===d||"number"===typeof c&&"number"===typeof d&&isNaN(c)&&isNaN(d))return!0;a++}return!1}});
String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")});

(function (w, d, undefined) {

  // check network status
  function checkNetwork(e) {
    if ("onLine" in navigator) {
      if (navigator.onLine) {
        d.getElementsByTagName("html")[0].setAttribute("offline", false);
        d.getElementById("offline-message").setAttribute("aria-hidden", true);
        if (GSC) GSC.offline = false;
      } else {
        d.getElementsByTagName("html")[0].setAttribute("offline", true);
        d.getElementById("offline-message").setAttribute("aria-hidden", false);
        if (GSC) GSC.offline = true;
        if (GSC) GSC.loaderOff();
      }
    }
  }

  // "online" feature detection
  if ("onLine" in navigator) {
    w.addEventListener("load", function () {
      w.addEventListener("online", checkNetwork);
      w.addEventListener("offline", checkNetwork);
      checkNetwork();
    });
  }

  // window.setCookie()
  if (typeof window.setCookie !== "function") window.setCookie = function (key, value, days) {
    if (key === undefined) return false;
    if (value === undefined) return false;
    if (days === undefined) days = 31;
    if (days === 0) {
      // session cookie
      document.cookie = key + "=" + value + ";path=/";
    } else {
      var date = new Date();
      date.setTime(date.getTime() + (parseInt(days) * 86400));
      document.cookie = key + "=" + value + ";path=/" + ";expires=" + date.toGMTString();
    }
  }

  // window.getCookie()
  if (typeof window.getCookie !== "function") window.getCookie = function (key) {
    if (key === undefined) return false;
    var v = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');
    return v ? v[2] : null;
  }

  // window.delCookie()
  if (typeof window.delCookie !== "function") window.delCookie = function (key) {
    if (key === undefined) return false;
    var date = new Date();
    date.setTime(0);
    document.cookie = key + "=;path=/" + ";expires=" + date.toGMTString();
  }

  if (GSC) {
    GSC.data = {};
    GSC.isadmin = {{#admin_group_admin}}true{{/admin_group_admin}}{{^admin_group_admin}}false{{/admin_group_admin}};
    GSC.profile = null;
    GSC.data.multisite_profiles = {{ multisite_profiles_json }};

    // feature detection: "touch"
    GSC.touch = ("ontouchstart" in w || w.DocumentTouch && d instanceof DocumentTouch) ?
      true : false;
    if (GSC.touch) d.getElementsByTagName("html")[0].setAttribute("touch", true);

    // GSC.FormatBytes()
    if (typeof GSC.FormatBytes !== "function") GSC.FormatBytes = function (number, precision) {
      number = parseInt(number);
      if (precision === undefined) precision = 2;
      if (!number) return "0";
      var c = 1024,
        e = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
        f = Math.floor(Math.log(number) / Math.log(c));
      return parseFloat((number / Math.pow(c, f)).toFixed(precision)) + "&nbsp;" + e[f];
    }

    // GSC.GetTime()
    if (typeof GSC.GetTime !== "function") GSC.GetTime = function (dateString) {

      function englishext(x) {
        x = ("" + x).slice(-1);
        if (x == 1) return "st";
        if (x == 2) return "nd";
        if (x == 3) return "rd";
        return "th";
      }

      var dayz = ["", "{{l.day_of_the_week_1}}", "{{l.day_of_the_week_2}}", "{{l.day_of_the_week_3}}",
        "{{l.day_of_the_week_4}}", "{{l.day_of_the_week_5}}", "{{l.day_of_the_week_6}}",
        "{{l.day_of_the_week_7}}"
      ];
      var monthz = ["", "{{l.month_1}}", "{{l.month_2}}", "{{l.month_3}}", "{{l.month_4}}",
        "{{l.month_5}}", "{{l.month_6}}", "{{l.month_7}}", "{{l.month_8}}", "{{l.month_9}}",
        "{{l.month_10}}", "{{l.month_11}}", "{{l.month_12}}"
      ];
      var monthz2p = ["", "{{l.month_2p_1}}", "{{l.month_2p_2}}", "{{l.month_2p_3}}", "{{l.month_2p_4}}",
        "{{l.month_2p_5}}", "{{l.month_2p_6}}", "{{l.month_2p_7}}", "{{l.month_2p_8}}", "{{l.month_2p_9}}",
        "{{l.month_2p_10}}", "{{l.month_2p_11}}", "{{l.month_2p_12}}"
      ];
      if (dateString === undefined) {
        var z = new Date();
      } else {
        var z = new Date(dateString);
      }
      var x = {};
      x.day = ("" + z.getDay());
      x.day_str = dayz[z.getDay()];
      x.h = ("" + z.getHours());
      x.hh = ("0" + z.getHours()).slice(-2);
      x.yy = ("" + z.getFullYear()).slice(-2);
      x.yyyy = ("" + z.getFullYear());
      x.m = ("" + (z.getMonth() + 1));
      x.mm = ("0" + (z.getMonth() + 1)).slice(-2);
      x.month_str = monthz[x.m];
      x.month_str2p = monthz2p[x.m];
      x.d = z.getDate();
      x.dd = ("0" + z.getDate()).slice(-2);
      x.today = x.dd + "." + x.mm + "." + x.yyyy;
      if ("{{ langcs }}") { // Czech locale
        x.today_str = x.day_str + " " + x.d + ". " + monthz2p[x.m] + " " + x.yyyy;
      }
      if ("{{ langen }}") { // English locale
        x.today_str = x.day_str + " " + x.d + englishext(x.d) + " " + monthz[x.m] + ", " + x.yyyy;
      }
      x.d = z;
      return x;
    }

    // GSC.CopyClipboard()
    if (typeof GSC.CopyClipboard !== "function") GSC.CopyClipboard = function (data) {
      var el = d.createElement("textarea");
      el.value = data;
      el.setAttribute("readonly", "");
      el.style.position = "absolute";
      el.style.left = "-9999px";
      d.body.appendChild(el);
      var selected =
        d.getSelection().rangeCount > 0 ? d.getSelection().getRangeAt(0) : false;
      el.select();
      d.execCommand("copy");
      d.body.removeChild(el);
      if (selected) {
        d.getSelection().removeAllRanges();
        d.getSelection().addRange(selected);
      }
    }

    // GSC.CopyThisText()
    if (typeof GSC.CopyThisText !== "function") GSC.CopyThisText = function (that) {
      if (that) {
        var t = $(that).text().trim();
        GSC.CopyClipboard(t);
        M.toast({html: t});
      }
    }

    // GSC.CopyThisHtml()
    if (typeof GSC.CopyThisHtml !== "function") GSC.CopyThisHtml = function (that) {
      if (that) {
        var t = $(that).text().trim();
        var h = $(that).html().trim();
        GSC.CopyClipboard(h);
        M.toast({html: t});
      }
    }

    // GSC.VersionCheck()
    GSC.init.push(function () {
      GSC.names.push("GSC.VersionCheck()");

      if (typeof GSC.VersionCheck !== "function") GSC.VersionCheck = function () {
        if (!GSC.offline) {
          $.post("/version/core", function (post) {
            if (post.data.LASAGNA.core.version) {
              if (post.data.LASAGNA.core.version != GSC.LASAGNA.core.version) {
                $("#update-message").show();
                GSC.VersionCheck = function () {};
                console.log("UPDATE: core version check failed!");
                return;
              }
            }
          });
          $.post("/{{ lang }}/version/data", function (post) {
            if (post.data.LASAGNA.data.version) {
              if (post.data.LASAGNA.data.version != GSC.LASAGNA.data.version) {
                $("#update-message").show();
                GSC.VersionCheck = function () {};
                console.log("UPDATE: {{ lang }} data version check failed!");
                return;
              }
            }
          });
          setTimeout("GSC.VersionCheck();", 60000);
        }
      }

      setTimeout("GSC.VersionCheck()", 10000);
    });

    // GSC.SetProfile()
    GSC.init.push(function() {
      GSC.names.push("GSC.SetProfile()");

      if (typeof GSC.SetProfile !== "function") GSC.SetProfile = function () {
        var profiles = [];
        var params = new window.URLSearchParams(window.location.search);
        var profile = params.get("profile");
        for (var i in GSC.data.multisite_profiles) profiles.push(i);
        if (!profiles.includes(profile) && (GSC.isadmin === true)) {
            profile = getCookie("profile");
        }
        if (!profiles.includes(profile)) {
          profile = "default";
        }
        GSC.profile = profile;
      }

    });

    // GSC.ReadArticles()
    GSC.init.push(function () {
      GSC.names.push("GSC.ReadArticles()");
      if (typeof GSC.ReadArticles !== "function") GSC.ReadArticles = function (callback) {
        if (GSC.summernote_on || GSC.offline) {
          setTimeout("GSC.ReadArticles();", 5000);
          return;
        }
        $.get("/ReadArticles/" + GSC.profile + "/{{ request_path_hash }}?" +
            Date.now() + "&crc=" + (GSC.data.articlescrc || ""), function (data) {
          if (data && data.data && data.data.html) {
            localStorage["articles_" + GSC.profile + "_{{ request_path_hash }}"] = data.data.html;
            if (data.data.crc) {
              GSC.data.articlescrc = data.data.crc;
              var obj = jQuery.parseJSON(data.data.html);
              for (var p in obj) if (obj.hasOwnProperty(p)) $("#" + p).html(obj[p]);
/*
              $(".summernote ul").each(function (i, obj) {
                $(obj).addClass("browser-default");
              });
*/
              $(".summernote ul").addClass("browser-default");
              $(".summernote img").addClass("responsive-img");
            }
          }
          if (typeof callback === "function") callback();
        });
        setTimeout("GSC.ReadArticles()", 30000);
      }

      GSC.SetProfile();
      var a = "articles_" + GSC.profile + "_{{ request_path_hash }}";
      if (localStorage && localStorage[a] && localStorage[a].length) {
          var obj = jQuery.parseJSON(localStorage[a]);
          for (var p in obj) if (obj.hasOwnProperty(p)) $("#" + p).html(obj[p]);
          $(".summernote ul").addClass("browser-default");
          $(".summernote img").addClass("responsive-img");
      }
      setTimeout("GSC.ReadArticles();", 1);
    });

    // DELAYED UI bindings
    GSC.init.push(function () {
      GSC.names.push("UI bindings");
      $(".sethlcs").click(function () {
        setCookie("hl", "cs");
      });
      $(".sethlen").click(function () {
        setCookie("hl", "en");
      });
      $("#update-message").click(function () {
        window.location.reload(true);
      });
      $(".summernote>ul").each(function (i, obj) {
        $(obj).addClass("browser-default");
      });
      if (GSC.touch) {
        if (typeof window.WebShareFactory === "function") {
          $("#nav-mobile").append('<li>' + WebShareFactory() + '</li>');
          $(".webshareicon").append("{{ l.webshare_button }}");
        }
      }
    });

  }
})(window, document);
</script>
