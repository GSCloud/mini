"use strict";
var version = "{{ version }}_{{ VERSION_SHORT }}";

var core = [
  {{#sitemap}}"/{{ . }}",{{/sitemap}}
  {{#sitemap}}"/{{ . }}?utm_source={{ app }}",{{/sitemap}}
  "{{ cdn }}/build.css",
  "{{ cdn }}/build.js",
  "{{ cdn }}/img/LASAGNA_logo.png",
  "{{ cdn }}/img/favicon-128.png",
  "{{ cdn }}/img/favicon-16.png",
  "{{ cdn }}/img/favicon-180.png",
  "{{ cdn }}/img/loading.png",
  "{{ cdn }}/img/logo.png",
];

self.addEventListener("install", function (event) {
  event.waitUntil(
    caches.open(version + "_core")
    .then(function (cache) {
      return cache.addAll(core);
    })
    .then(self.skipWaiting())
  );
});

self.addEventListener("fetch", function (event) {
  if (event.request.method !== "GET") {
    return;
  }
  event.respondWith(
    caches.match(event.request)
    .then(function (cached) {
      var networked = fetch(event.request)
        .then(fetchedFromNetwork, unableToResolve)
        .catch(unableToResolve);
      return cached || networked;

      function fetchedFromNetwork (response) {
        var cacheCopy = response.clone();
        caches.open(version + "_pages")
          .then(function add(cache) {
            return cache.put(event.request, cacheCopy);
          })
          .then(function () {
          });
        return response;
      }

      function unableToResolve() {
        return new Response('<!DOCTYPE html><html><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"><h1 style="text-align:center">ðŸ™„ OFFLINE ðŸ™„</h1>', {
          status: 503,
          statusText: "Service Unavailable",
          headers: new Headers({
            "Content-Type": "text/html"
          })
        });
      }
    })
  );
});

self.addEventListener("activate", function (event) {
  event.waitUntil(
    caches
    .keys()
    .then(function (keys) {
      return Promise.all(
        keys
        .filter(function (key) {
          return !key.startsWith(version);
        })
        .map(function (key) {
          return caches.delete(key);
        })
      );
    })
    .then(function () {
      console.log("WORKER: activate completed");
    })
  );
});
